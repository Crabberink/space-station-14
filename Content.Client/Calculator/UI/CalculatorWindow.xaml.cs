using System.Numerics;
using Content.Shared.Calculator.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using static Content.Shared.Calculator.Components.CalculatorComponent;

namespace Content.Client.Calculator.UI;

[GenerateTypedNameReferences]
public sealed partial class CalculatorWindow : DefaultWindow
{
    private readonly Dictionary<string, Button> _buttons = new();

    public CalculatorWindow()
    {
        RobustXamlLoader.Load(this);

        FillNumberGrid();
    }

    public void UpdateState(IPrototypeManager prototypeManager, CalculatorBoundUserInterfaceState state)
    {
        //Update shit
    }

    void FillNumberGrid()
    {
        for (int i = 1; i <= 9; i++)
        {
            AddGridNumberButton(i);
        }

        AddGridButton("C", _ => {

        });

        AddGridNumberButton(0);

        AddGridButton(".", _ => {

        });
    }

    void AddGridNumberButton(int i)
    {
        var button = new Button
        {
            Text = $"{i}",
            MinSize = new Vector2(40,40),
            HorizontalExpand = true,
            VerticalExpand = true,
        };

        button.OnPressed += _ =>
        {
            //TODO: ADD BUTTON BEHAVIOR
        };

        NumberGrid.AddChild(button);
    }

    private void AddGridButton(string text, Action<BaseButton.ButtonEventArgs> onClick)
    {
        var button = new Button
        {
            Text = text,
            // VerticalExpand = true,
            HorizontalExpand = true,
            VerticalExpand = true,
        };
        button.OnPressed += onClick;

        NumberGrid.AddChild(button);
    }
}
